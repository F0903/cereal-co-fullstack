//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "order")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub total: i32,
    #[sea_orm(column_type = "Text")]
    pub shipping_name: String,
    #[sea_orm(column_type = "Text")]
    pub shipping_address: String,
    #[sea_orm(column_type = "Text")]
    pub shipping_phone: String,
    #[sea_orm(column_type = "Text")]
    pub shipping_mail: String,
    pub order_items_id: i32,
    pub created_at: DateTimeUtc,
    pub updated_at: DateTimeUtc,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::order_item::Entity",
        from = "Column::OrderItemsId",
        to = "super::order_item::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    OrderItem,
}

impl Related<super::order_item::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::OrderItem.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
